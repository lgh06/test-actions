#
name: upload downloaded files to ghcr.io

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches: ['main']

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      #
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          sudo apt-get update
          if grep -q "youtube" urls.txt; then
            echo "Found youtube link(s) in urls.txt, using yt-dlp."
            sudo apt-get install -y ffmpeg curl
            curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o ./yt-dlp
            chmod a+rx ./yt-dlp
            ./yt-dlp -a urls.txt --cookies coo.txt -f "bv*[height<=1080]+ba/b[height<=1080]" --recode-video mp4 -o "./dist/%(upload_date>%Y-%m-%d)s.%(ext)s"
          else
            echo "No youtube links in urls.txt, using aria2c."
            sudo apt-get install -y aria2
            aria2c -x 5 -s 5 -i urls.txt -d ./dist
          fi
      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          provenance: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
